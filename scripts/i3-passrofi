#!/usr/bin/env bash

# A passmenu alternative with gopass mount, filter, and rofi support.

# The config file is searched at $I3_PASSROFI_CONFIG or ../misc/i3-passrofi and ignored if not existing.
# It may contain two associative arrays with patterns (values) that are matched against the stores (keys).
# The first array (patterns) are patterns secrets have to match (defaults to .*)
# The second array (patternsIgnore) are patterns secrets have to not match (defaults to ^$)
# Remember to use substore prefixes in patterns if you want to filter substores.

shopt -s nullglob globstar

typeit=0
if [[ $1 == "--type" ]]; then
	typeit=1
	shift
fi

# Patterns
declare -A patterns
declare -A patternsIgnore
cfg="${I3_PASSROFI_CONFIG:-$(readlink -m "${BASH_SOURCE[0]}/../../misc/i3-passrofi")}"
if [[ -f "${cfg}" ]]; then
	# shellcheck source=../misc/i3-passrofi
	source "${cfg}"
fi

mounts="$(gopass mounts)"
if [ "$mounts" = 'No mounts' ]; then
	mounts="gopass $HOME/.password-store"
else
	mounts="$(echo "${mounts}" | awk -F '[ ()]' '{ if (NF==0){next}; if (NF==5){print $2 " " $4}else{print $1 " " $3}}')"
fi

password_files=()
while IFS=' ' read -r storename storepath; do
	# List all files matching *.gpg
	files=("${storepath}"/**/*.gpg)
	if [ "${storename}" = gopass ]; then
		# Remove full path
		files=("${files[@]##"${storepath}/"}")
	else
		# Replace full path with name
		files=("${files[@]/"${storepath}/"/"${storename}/"}")
	fi
	# Filter files with patterns
	filtered=()
	for pass in "${files[@]}"; do
		if [[ "${pass}" =~ ${patterns[${storename}]:-.*} ]]; then
			if ! [[ "${pass}" =~ ${patternsIgnore[${storename}]:-^$} ]]; then
				filtered+=("${pass}")
			fi
		fi
	done
	# Add to list with all files
	password_files+=("${filtered[@]}")
done < <(echo "$mounts")
# Drop .gpg suffix
password_files=("${password_files[@]%.gpg}")

# Show menu
password=$(printf '%s\n' "${password_files[@]}" | rofi -dmenu -p 'gopass' "$@")

# Nothing selected?
[[ -n $password ]] || exit

# Copy/Type the password
if [[ $typeit -eq 0 ]]; then
	gopass show -c "$password" 2>/dev/null
else
	gopass show "$password" | { read -r pass; printf %s "$pass"; } |
		xdotool type --clearmodifiers --file -
fi
